# This is a basic workflow to help you get started with Actions

name: RELEASE

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Runs a set of commands using the runners shell

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog

      - name: Build
        run: |
          chmod 755 ./.github/build.sh
          ./.github/build.sh
          echo "version=$(TZ=':Asia/Shanghai' date '+%Y.%m.%d')" >> ./module.prop
          echo "版本：$(TZ=':Asia/Shanghai' date '+%Y.%m.%d')" >> ./module.prop
          date=$(TZ=':Asia/Shanghai' date '+%Y.%m.%d')

      - name: Zip Folder
        run: |
          XZ_OPT=-9 tar cJf icons.tar.xz ./icons
          zip -r MIUI_Icons-${{date}}.zip ./common
          zip -r MIUI_Icons-${{date}}.zip ./META-INF
          zip -r MIUI_Icons-${{date}}.zip ./icons.tar.xz
          zip -r MIUI_Icons-${{date}}.zip ./module.prop

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # This token is provided by Actions, you do not need to create your own token
          REPO_OWNER: pzcn
        with:
          tag_name: ${{steps.tag_version.outputs.new_tag}}
          release_name: MIUI_Icons-${{date}}
          body: |
            ${{steps.Changelog.outputs.content}}
          draft: false
          prerelease: false

     ## 上传附件
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./MIUI_Icons-${{date}}.zip
          asset_name: MIUI_Icons-${{date}}.zip
          asset_content_type: application/zip

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          path: ./MIUI_Icons-$(date).zip

# This is a basic workflow to help you get started with Actions
